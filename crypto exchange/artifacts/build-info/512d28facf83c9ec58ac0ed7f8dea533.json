{
	"id": "512d28facf83c9ec58ac0ed7f8dea533",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"crypto exchange/crypto exchange smart contract 2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\n// TokenExchange\n// A simple exchange contract for trading IERC-20 tokens\n\ncontract TokenExchange {\n    // State variables\n    address public owner; // Owner of the contract\n\n    // Events\n    event TokenPurchase(address indexed buyer, address indexed token, uint256 amount, uint256 price);\n    event TokenSale(address indexed seller, address indexed token, uint256 amount, uint256 price);\n\n    // Sets the contract deployer as the owner\n     \n    constructor() {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Allows users to buy tokens for Ether at a specified price.\n     * @param token Address of the IERC-20 token to buy\n     * @param tokenAmount Amount of tokens to buy\n     * @param tokenPrice Price per token in Ether\n     */\n    function buyToken(address token, uint256 tokenAmount, uint256 tokenPrice) external payable {\n        uint256 etherAmount = tokenAmount * tokenPrice;\n        require(msg.value >= etherAmount, \"Not enough Ether sent\");\n\n        IERC20(token).transfer(msg.sender, tokenAmount);\n\n        emit TokenPurchase(msg.sender, token, tokenAmount, tokenPrice);\n    }\n\n    /**\n     * @dev Allows users to sell tokens for Ether at a specified price.\n     * @param token Address of the IERC-20 token to sell\n     * @param tokenAmount Amount of tokens to sell\n     * @param tokenPrice Price per token in Ether\n     */\n    function sellToken(address token, uint256 tokenAmount, uint256 tokenPrice) external {\n        uint256 etherAmount = tokenAmount * tokenPrice;\n        require(address(this).balance >= etherAmount, \"Contract does not have enough Ether\");\n\n        IERC20(token).transferFrom(msg.sender, address(this), tokenAmount);\n        payable(msg.sender).transfer(etherAmount);\n\n        emit TokenSale(msg.sender, token, tokenAmount, tokenPrice);\n    }\n\n    /**\n     * @dev Allows the owner to withdraw Ether from the contract.\n     */\n    function withdrawEther() external {\n        require(msg.sender == owner, \"Only the owner can withdraw\");\n        payable(owner).transfer(address(this).balance);\n    }\n\n    /**\n     * @dev Returns the Ether balance of the contract.\n     */\n    function getContractBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crypto exchange/crypto exchange smart contract 2.sol": {
				"TokenExchange": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenPurchase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TokenSale",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								}
							],
							"name": "sellToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawEther",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"buyToken(address,uint256,uint256)": {
								"details": "Allows users to buy tokens for Ether at a specified price.",
								"params": {
									"token": "Address of the IERC-20 token to buy",
									"tokenAmount": "Amount of tokens to buy",
									"tokenPrice": "Price per token in Ether"
								}
							},
							"getContractBalance()": {
								"details": "Returns the Ether balance of the contract."
							},
							"sellToken(address,uint256,uint256)": {
								"details": "Allows users to sell tokens for Ether at a specified price.",
								"params": {
									"token": "Address of the IERC-20 token to sell",
									"tokenAmount": "Amount of tokens to sell",
									"tokenPrice": "Price per token in Ether"
								}
							},
							"withdrawEther()": {
								"details": "Allows the owner to withdraw Ether from the contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crypto exchange/crypto exchange smart contract 2.sol\":191:2343  contract TokenExchange {... */\n  mstore(0x40, 0x80)\n    /* \"crypto exchange/crypto exchange smart contract 2.sol\":564:613  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"crypto exchange/crypto exchange smart contract 2.sol\":596:606  msg.sender */\n  caller\n    /* \"crypto exchange/crypto exchange smart contract 2.sol\":588:593  owner */\n  0x00\n  dup1\n    /* \"crypto exchange/crypto exchange smart contract 2.sol\":588:606  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crypto exchange/crypto exchange smart contract 2.sol\":191:2343  contract TokenExchange {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":191:2343  contract TokenExchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3e11741f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7362377b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe671499b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1467:1905  function sellToken(address token, uint256 tokenAmount, uint256 tokenPrice) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2236:2341  function getContractBalance() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1993:2159  function withdrawEther() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":243:263  address public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":862:1215  function buyToken(address token, uint256 tokenAmount, uint256 tokenPrice) external payable {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1467:1905  function sellToken(address token, uint256 tokenAmount, uint256 tokenPrice) external {... */\n    tag_11:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1561:1580  uint256 etherAmount */\n      0x00\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1597:1607  tokenPrice */\n      dup2\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1583:1594  tokenAmount */\n      dup4\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1583:1607  tokenAmount * tokenPrice */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1561:1607  uint256 etherAmount = tokenAmount * tokenPrice */\n      swap1\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1650:1661  etherAmount */\n      dup1\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1625:1646  address(this).balance */\n      selfbalance\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1625:1661  address(this).balance >= etherAmount */\n      lt\n      iszero\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1617:1701  require(address(this).balance >= etherAmount, \"Contract does not have enough Ether\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1719:1724  token */\n      dup4\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1712:1738  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1739:1749  msg.sender */\n      caller\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1759:1763  this */\n      address\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1766:1777  tokenAmount */\n      dup7\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1712:1778  IERC20(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1796:1806  msg.sender */\n      caller\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1788:1816  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1788:1829  payable(msg.sender).transfer(etherAmount) */\n      0x08fc\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1817:1828  etherAmount */\n      dup3\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1788:1829  payable(msg.sender).transfer(etherAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1867:1872  token */\n      dup4\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1845:1898  TokenSale(msg.sender, token, tokenAmount, tokenPrice) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1855:1865  msg.sender */\n      caller\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1845:1898  TokenSale(msg.sender, token, tokenAmount, tokenPrice) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3aa3f154f6bf5e3490d1a7205aa8d1412e76d26f9d186830de86fb9309224040\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1874:1885  tokenAmount */\n      dup6\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1887:1897  tokenPrice */\n      dup6\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1845:1898  TokenSale(msg.sender, token, tokenAmount, tokenPrice) */\n      mload(0x40)\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1551:1905  {... */\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1467:1905  function sellToken(address token, uint256 tokenAmount, uint256 tokenPrice) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2236:2341  function getContractBalance() public view returns (uint256) {... */\n    tag_14:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2287:2294  uint256 */\n      0x00\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2313:2334  address(this).balance */\n      selfbalance\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2306:2334  return address(this).balance */\n      swap1\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2236:2341  function getContractBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1993:2159  function withdrawEther() external {... */\n    tag_19:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2059:2064  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2045:2064  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2045:2055  msg.sender */\n      caller\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2045:2064  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2037:2096  require(msg.sender == owner, \"Only the owner can withdraw\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2114:2119  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2106:2129  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2106:2152  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2130:2151  address(this).balance */\n      selfbalance\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":2106:2152  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1993:2159  function withdrawEther() external {... */\n      jump\t// out\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":243:263  address public owner */\n    tag_22:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":862:1215  function buyToken(address token, uint256 tokenAmount, uint256 tokenPrice) external payable {... */\n    tag_27:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":963:982  uint256 etherAmount */\n      0x00\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":999:1009  tokenPrice */\n      dup2\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":985:996  tokenAmount */\n      dup4\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":985:1009  tokenAmount * tokenPrice */\n      tag_52\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_52:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":963:1009  uint256 etherAmount = tokenAmount * tokenPrice */\n      swap1\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1040:1051  etherAmount */\n      dup1\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1027:1036  msg.value */\n      callvalue\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1027:1051  msg.value >= etherAmount */\n      lt\n      iszero\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1019:1077  require(msg.value >= etherAmount, \"Not enough Ether sent\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1095:1100  token */\n      dup4\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1088:1110  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1111:1121  msg.sender */\n      caller\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1123:1134  tokenAmount */\n      dup6\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1088:1135  IERC20(token).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1177:1182  token */\n      dup4\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1151:1208  TokenPurchase(msg.sender, token, tokenAmount, tokenPrice) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1165:1175  msg.sender */\n      caller\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1151:1208  TokenPurchase(msg.sender, token, tokenAmount, tokenPrice) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1184:1195  tokenAmount */\n      dup6\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1197:1207  tokenPrice */\n      dup6\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":1151:1208  TokenPurchase(msg.sender, token, tokenAmount, tokenPrice) */\n      mload(0x40)\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":953:1215  {... */\n      pop\n        /* \"crypto exchange/crypto exchange smart contract 2.sol\":862:1215  function buyToken(address token, uint256 tokenAmount, uint256 tokenPrice) external payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_63:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_65:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_66:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_91\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_65\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_67:\n        /* \"#utility.yul\":641:665   */\n      tag_93\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_66\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_94:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_68:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_96\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_67\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_69:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_70:\n        /* \"#utility.yul\":997:1021   */\n      tag_99\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_69\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_100:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_71:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_102\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_70\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_10:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      dup1\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_105\n      tag_63\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1307:1426   */\n    tag_104:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_106\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_68\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_107\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_71\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_108\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_71\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:1940   */\n    tag_72:\n        /* \"#utility.yul\":1909:1933   */\n      tag_110\n        /* \"#utility.yul\":1927:1932   */\n      dup2\n        /* \"#utility.yul\":1909:1933   */\n      tag_69\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1904:1907   */\n      dup3\n        /* \"#utility.yul\":1897:1934   */\n      mstore\n        /* \"#utility.yul\":1822:1940   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2168   */\n    tag_16:\n        /* \"#utility.yul\":2039:2043   */\n      0x00\n        /* \"#utility.yul\":2077:2079   */\n      0x20\n        /* \"#utility.yul\":2066:2075   */\n      dup3\n        /* \"#utility.yul\":2062:2080   */\n      add\n        /* \"#utility.yul\":2054:2080   */\n      swap1\n      pop\n        /* \"#utility.yul\":2090:2161   */\n      tag_112\n        /* \"#utility.yul\":2158:2159   */\n      0x00\n        /* \"#utility.yul\":2147:2156   */\n      dup4\n        /* \"#utility.yul\":2143:2160   */\n      add\n        /* \"#utility.yul\":2134:2140   */\n      dup5\n        /* \"#utility.yul\":2090:2161   */\n      tag_72\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1946:2168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2292   */\n    tag_73:\n        /* \"#utility.yul\":2261:2285   */\n      tag_114\n        /* \"#utility.yul\":2279:2284   */\n      dup2\n        /* \"#utility.yul\":2261:2285   */\n      tag_66\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2256:2259   */\n      dup3\n        /* \"#utility.yul\":2249:2286   */\n      mstore\n        /* \"#utility.yul\":2174:2292   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2298:2520   */\n    tag_24:\n        /* \"#utility.yul\":2391:2395   */\n      0x00\n        /* \"#utility.yul\":2429:2431   */\n      0x20\n        /* \"#utility.yul\":2418:2427   */\n      dup3\n        /* \"#utility.yul\":2414:2432   */\n      add\n        /* \"#utility.yul\":2406:2432   */\n      swap1\n      pop\n        /* \"#utility.yul\":2442:2513   */\n      tag_116\n        /* \"#utility.yul\":2510:2511   */\n      0x00\n        /* \"#utility.yul\":2499:2508   */\n      dup4\n        /* \"#utility.yul\":2495:2512   */\n      add\n        /* \"#utility.yul\":2486:2492   */\n      dup5\n        /* \"#utility.yul\":2442:2513   */\n      tag_73\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2298:2520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2706   */\n    tag_74:\n        /* \"#utility.yul\":2574:2651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2571:2572   */\n      0x00\n        /* \"#utility.yul\":2564:2652   */\n      mstore\n        /* \"#utility.yul\":2671:2675   */\n      0x11\n        /* \"#utility.yul\":2668:2669   */\n      0x04\n        /* \"#utility.yul\":2661:2676   */\n      mstore\n        /* \"#utility.yul\":2695:2699   */\n      0x24\n        /* \"#utility.yul\":2692:2693   */\n      0x00\n        /* \"#utility.yul\":2685:2700   */\n      revert\n        /* \"#utility.yul\":2712:3122   */\n    tag_30:\n        /* \"#utility.yul\":2752:2759   */\n      0x00\n        /* \"#utility.yul\":2775:2795   */\n      tag_119\n        /* \"#utility.yul\":2793:2794   */\n      dup3\n        /* \"#utility.yul\":2775:2795   */\n      tag_69\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2770:2795   */\n      swap2\n      pop\n        /* \"#utility.yul\":2809:2829   */\n      tag_120\n        /* \"#utility.yul\":2827:2828   */\n      dup4\n        /* \"#utility.yul\":2809:2829   */\n      tag_69\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2804:2829   */\n      swap3\n      pop\n        /* \"#utility.yul\":2864:2865   */\n      dup3\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2866   */\n      mul\n        /* \"#utility.yul\":2886:2916   */\n      tag_121\n        /* \"#utility.yul\":2904:2915   */\n      dup2\n        /* \"#utility.yul\":2886:2916   */\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2875:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":3065:3066   */\n      dup3\n        /* \"#utility.yul\":3056:3063   */\n      dup3\n        /* \"#utility.yul\":3052:3067   */\n      div\n        /* \"#utility.yul\":3049:3050   */\n      dup5\n        /* \"#utility.yul\":3046:3068   */\n      eq\n        /* \"#utility.yul\":3026:3027   */\n      dup4\n        /* \"#utility.yul\":3019:3028   */\n      iszero\n        /* \"#utility.yul\":2999:3082   */\n      or\n        /* \"#utility.yul\":2976:3115   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3095:3113   */\n      tag_123\n      tag_74\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2976:3115   */\n    tag_122:\n        /* \"#utility.yul\":2760:3122   */\n      pop\n        /* \"#utility.yul\":2712:3122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3128:3297   */\n    tag_75:\n        /* \"#utility.yul\":3212:3223   */\n      0x00\n        /* \"#utility.yul\":3246:3252   */\n      dup3\n        /* \"#utility.yul\":3241:3244   */\n      dup3\n        /* \"#utility.yul\":3234:3253   */\n      mstore\n        /* \"#utility.yul\":3286:3290   */\n      0x20\n        /* \"#utility.yul\":3281:3284   */\n      dup3\n        /* \"#utility.yul\":3277:3291   */\n      add\n        /* \"#utility.yul\":3262:3291   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3525   */\n    tag_76:\n        /* \"#utility.yul\":3443:3477   */\n      0x436f6e747261637420646f6573206e6f74206861766520656e6f756768204574\n        /* \"#utility.yul\":3439:3440   */\n      0x00\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3427:3441   */\n      add\n        /* \"#utility.yul\":3420:3478   */\n      mstore\n        /* \"#utility.yul\":3512:3517   */\n      0x6865720000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3507:3509   */\n      0x20\n        /* \"#utility.yul\":3499:3505   */\n      dup3\n        /* \"#utility.yul\":3495:3510   */\n      add\n        /* \"#utility.yul\":3488:3518   */\n      mstore\n        /* \"#utility.yul\":3303:3525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3531:3897   */\n    tag_77:\n        /* \"#utility.yul\":3673:3676   */\n      0x00\n        /* \"#utility.yul\":3694:3761   */\n      tag_127\n        /* \"#utility.yul\":3758:3760   */\n      0x23\n        /* \"#utility.yul\":3753:3756   */\n      dup4\n        /* \"#utility.yul\":3694:3761   */\n      tag_75\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3687:3761   */\n      swap2\n      pop\n        /* \"#utility.yul\":3770:3863   */\n      tag_128\n        /* \"#utility.yul\":3859:3862   */\n      dup3\n        /* \"#utility.yul\":3770:3863   */\n      tag_76\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3888:3890   */\n      0x40\n        /* \"#utility.yul\":3883:3886   */\n      dup3\n        /* \"#utility.yul\":3879:3891   */\n      add\n        /* \"#utility.yul\":3872:3891   */\n      swap1\n      pop\n        /* \"#utility.yul\":3531:3897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3903:4322   */\n    tag_33:\n        /* \"#utility.yul\":4069:4073   */\n      0x00\n        /* \"#utility.yul\":4107:4109   */\n      0x20\n        /* \"#utility.yul\":4096:4105   */\n      dup3\n        /* \"#utility.yul\":4092:4110   */\n      add\n        /* \"#utility.yul\":4084:4110   */\n      swap1\n      pop\n        /* \"#utility.yul\":4156:4165   */\n      dup2\n        /* \"#utility.yul\":4150:4154   */\n      dup2\n        /* \"#utility.yul\":4146:4166   */\n      sub\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4131:4140   */\n      dup4\n        /* \"#utility.yul\":4127:4144   */\n      add\n        /* \"#utility.yul\":4120:4167   */\n      mstore\n        /* \"#utility.yul\":4184:4315   */\n      tag_130\n        /* \"#utility.yul\":4310:4314   */\n      dup2\n        /* \"#utility.yul\":4184:4315   */\n      tag_77\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4176:4315   */\n      swap1\n      pop\n        /* \"#utility.yul\":3903:4322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4328:4770   */\n    tag_35:\n        /* \"#utility.yul\":4477:4481   */\n      0x00\n        /* \"#utility.yul\":4515:4517   */\n      0x60\n        /* \"#utility.yul\":4504:4513   */\n      dup3\n        /* \"#utility.yul\":4500:4518   */\n      add\n        /* \"#utility.yul\":4492:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4528:4599   */\n      tag_132\n        /* \"#utility.yul\":4596:4597   */\n      0x00\n        /* \"#utility.yul\":4585:4594   */\n      dup4\n        /* \"#utility.yul\":4581:4598   */\n      add\n        /* \"#utility.yul\":4572:4578   */\n      dup7\n        /* \"#utility.yul\":4528:4599   */\n      tag_73\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4609:4681   */\n      tag_133\n        /* \"#utility.yul\":4677:4679   */\n      0x20\n        /* \"#utility.yul\":4666:4675   */\n      dup4\n        /* \"#utility.yul\":4662:4680   */\n      add\n        /* \"#utility.yul\":4653:4659   */\n      dup6\n        /* \"#utility.yul\":4609:4681   */\n      tag_73\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4691:4763   */\n      tag_134\n        /* \"#utility.yul\":4759:4761   */\n      0x40\n        /* \"#utility.yul\":4748:4757   */\n      dup4\n        /* \"#utility.yul\":4744:4762   */\n      add\n        /* \"#utility.yul\":4735:4741   */\n      dup5\n        /* \"#utility.yul\":4691:4763   */\n      tag_72\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4328:4770   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:4866   */\n    tag_78:\n        /* \"#utility.yul\":4810:4817   */\n      0x00\n        /* \"#utility.yul\":4853:4858   */\n      dup2\n        /* \"#utility.yul\":4846:4859   */\n      iszero\n        /* \"#utility.yul\":4839:4860   */\n      iszero\n        /* \"#utility.yul\":4828:4860   */\n      swap1\n      pop\n        /* \"#utility.yul\":4776:4866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4872:4988   */\n    tag_79:\n        /* \"#utility.yul\":4942:4963   */\n      tag_137\n        /* \"#utility.yul\":4957:4962   */\n      dup2\n        /* \"#utility.yul\":4942:4963   */\n      tag_78\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4935:4940   */\n      dup2\n        /* \"#utility.yul\":4932:4964   */\n      eq\n        /* \"#utility.yul\":4922:4982   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4975:4976   */\n      dup1\n        /* \"#utility.yul\":4968:4980   */\n      revert\n        /* \"#utility.yul\":4922:4982   */\n    tag_138:\n        /* \"#utility.yul\":4872:4988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5131   */\n    tag_80:\n        /* \"#utility.yul\":5048:5053   */\n      0x00\n        /* \"#utility.yul\":5079:5085   */\n      dup2\n        /* \"#utility.yul\":5073:5086   */\n      mload\n        /* \"#utility.yul\":5064:5086   */\n      swap1\n      pop\n        /* \"#utility.yul\":5095:5125   */\n      tag_140\n        /* \"#utility.yul\":5119:5124   */\n      dup2\n        /* \"#utility.yul\":5095:5125   */\n      tag_79\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4994:5131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5137:5482   */\n    tag_39:\n        /* \"#utility.yul\":5204:5210   */\n      0x00\n        /* \"#utility.yul\":5253:5255   */\n      0x20\n        /* \"#utility.yul\":5241:5250   */\n      dup3\n        /* \"#utility.yul\":5232:5239   */\n      dup5\n        /* \"#utility.yul\":5228:5251   */\n      sub\n        /* \"#utility.yul\":5224:5256   */\n      slt\n        /* \"#utility.yul\":5221:5340   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":5259:5338   */\n      tag_143\n      tag_63\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5221:5340   */\n    tag_142:\n        /* \"#utility.yul\":5379:5380   */\n      0x00\n        /* \"#utility.yul\":5404:5465   */\n      tag_144\n        /* \"#utility.yul\":5457:5464   */\n      dup5\n        /* \"#utility.yul\":5448:5454   */\n      dup3\n        /* \"#utility.yul\":5437:5446   */\n      dup6\n        /* \"#utility.yul\":5433:5455   */\n      add\n        /* \"#utility.yul\":5404:5465   */\n      tag_80\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5394:5465   */\n      swap2\n      pop\n        /* \"#utility.yul\":5350:5475   */\n      pop\n        /* \"#utility.yul\":5137:5482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5488:5820   */\n    tag_43:\n        /* \"#utility.yul\":5609:5613   */\n      0x00\n        /* \"#utility.yul\":5647:5649   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup3\n        /* \"#utility.yul\":5632:5650   */\n      add\n        /* \"#utility.yul\":5624:5650   */\n      swap1\n      pop\n        /* \"#utility.yul\":5660:5731   */\n      tag_146\n        /* \"#utility.yul\":5728:5729   */\n      0x00\n        /* \"#utility.yul\":5717:5726   */\n      dup4\n        /* \"#utility.yul\":5713:5730   */\n      add\n        /* \"#utility.yul\":5704:5710   */\n      dup6\n        /* \"#utility.yul\":5660:5731   */\n      tag_72\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5741:5813   */\n      tag_147\n        /* \"#utility.yul\":5809:5811   */\n      0x20\n        /* \"#utility.yul\":5798:5807   */\n      dup4\n        /* \"#utility.yul\":5794:5812   */\n      add\n        /* \"#utility.yul\":5785:5791   */\n      dup5\n        /* \"#utility.yul\":5741:5813   */\n      tag_72\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5488:5820   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5826:6003   */\n    tag_81:\n        /* \"#utility.yul\":5966:5995   */\n      0x4f6e6c7920746865206f776e65722063616e2077697468647261770000000000\n        /* \"#utility.yul\":5962:5963   */\n      0x00\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5950:5964   */\n      add\n        /* \"#utility.yul\":5943:5996   */\n      mstore\n        /* \"#utility.yul\":5826:6003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6009:6375   */\n    tag_82:\n        /* \"#utility.yul\":6151:6154   */\n      0x00\n        /* \"#utility.yul\":6172:6239   */\n      tag_150\n        /* \"#utility.yul\":6236:6238   */\n      0x1b\n        /* \"#utility.yul\":6231:6234   */\n      dup4\n        /* \"#utility.yul\":6172:6239   */\n      tag_75\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6165:6239   */\n      swap2\n      pop\n        /* \"#utility.yul\":6248:6341   */\n      tag_151\n        /* \"#utility.yul\":6337:6340   */\n      dup3\n        /* \"#utility.yul\":6248:6341   */\n      tag_81\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6361:6364   */\n      dup3\n        /* \"#utility.yul\":6357:6369   */\n      add\n        /* \"#utility.yul\":6350:6369   */\n      swap1\n      pop\n        /* \"#utility.yul\":6009:6375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6381:6800   */\n    tag_48:\n        /* \"#utility.yul\":6547:6551   */\n      0x00\n        /* \"#utility.yul\":6585:6587   */\n      0x20\n        /* \"#utility.yul\":6574:6583   */\n      dup3\n        /* \"#utility.yul\":6570:6588   */\n      add\n        /* \"#utility.yul\":6562:6588   */\n      swap1\n      pop\n        /* \"#utility.yul\":6634:6643   */\n      dup2\n        /* \"#utility.yul\":6628:6632   */\n      dup2\n        /* \"#utility.yul\":6624:6644   */\n      sub\n        /* \"#utility.yul\":6620:6621   */\n      0x00\n        /* \"#utility.yul\":6609:6618   */\n      dup4\n        /* \"#utility.yul\":6605:6622   */\n      add\n        /* \"#utility.yul\":6598:6645   */\n      mstore\n        /* \"#utility.yul\":6662:6793   */\n      tag_153\n        /* \"#utility.yul\":6788:6792   */\n      dup2\n        /* \"#utility.yul\":6662:6793   */\n      tag_82\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6654:6793   */\n      swap1\n      pop\n        /* \"#utility.yul\":6381:6800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:6977   */\n    tag_83:\n        /* \"#utility.yul\":6946:6969   */\n      0x4e6f7420656e6f7567682045746865722073656e740000000000000000000000\n        /* \"#utility.yul\":6942:6943   */\n      0x00\n        /* \"#utility.yul\":6934:6940   */\n      dup3\n        /* \"#utility.yul\":6930:6944   */\n      add\n        /* \"#utility.yul\":6923:6970   */\n      mstore\n        /* \"#utility.yul\":6806:6977   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7349   */\n    tag_84:\n        /* \"#utility.yul\":7125:7128   */\n      0x00\n        /* \"#utility.yul\":7146:7213   */\n      tag_156\n        /* \"#utility.yul\":7210:7212   */\n      0x15\n        /* \"#utility.yul\":7205:7208   */\n      dup4\n        /* \"#utility.yul\":7146:7213   */\n      tag_75\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7139:7213   */\n      swap2\n      pop\n        /* \"#utility.yul\":7222:7315   */\n      tag_157\n        /* \"#utility.yul\":7311:7314   */\n      dup3\n        /* \"#utility.yul\":7222:7315   */\n      tag_83\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7340:7342   */\n      0x20\n        /* \"#utility.yul\":7335:7338   */\n      dup3\n        /* \"#utility.yul\":7331:7343   */\n      add\n        /* \"#utility.yul\":7324:7343   */\n      swap1\n      pop\n        /* \"#utility.yul\":6983:7349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7355:7774   */\n    tag_55:\n        /* \"#utility.yul\":7521:7525   */\n      0x00\n        /* \"#utility.yul\":7559:7561   */\n      0x20\n        /* \"#utility.yul\":7548:7557   */\n      dup3\n        /* \"#utility.yul\":7544:7562   */\n      add\n        /* \"#utility.yul\":7536:7562   */\n      swap1\n      pop\n        /* \"#utility.yul\":7608:7617   */\n      dup2\n        /* \"#utility.yul\":7602:7606   */\n      dup2\n        /* \"#utility.yul\":7598:7618   */\n      sub\n        /* \"#utility.yul\":7594:7595   */\n      0x00\n        /* \"#utility.yul\":7583:7592   */\n      dup4\n        /* \"#utility.yul\":7579:7596   */\n      add\n        /* \"#utility.yul\":7572:7619   */\n      mstore\n        /* \"#utility.yul\":7636:7767   */\n      tag_159\n        /* \"#utility.yul\":7762:7766   */\n      dup2\n        /* \"#utility.yul\":7636:7767   */\n      tag_84\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7628:7767   */\n      swap1\n      pop\n        /* \"#utility.yul\":7355:7774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7780:8112   */\n    tag_57:\n        /* \"#utility.yul\":7901:7905   */\n      0x00\n        /* \"#utility.yul\":7939:7941   */\n      0x40\n        /* \"#utility.yul\":7928:7937   */\n      dup3\n        /* \"#utility.yul\":7924:7942   */\n      add\n        /* \"#utility.yul\":7916:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7952:8023   */\n      tag_161\n        /* \"#utility.yul\":8020:8021   */\n      0x00\n        /* \"#utility.yul\":8009:8018   */\n      dup4\n        /* \"#utility.yul\":8005:8022   */\n      add\n        /* \"#utility.yul\":7996:8002   */\n      dup6\n        /* \"#utility.yul\":7952:8023   */\n      tag_73\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":8033:8105   */\n      tag_162\n        /* \"#utility.yul\":8101:8103   */\n      0x20\n        /* \"#utility.yul\":8090:8099   */\n      dup4\n        /* \"#utility.yul\":8086:8104   */\n      add\n        /* \"#utility.yul\":8077:8083   */\n      dup5\n        /* \"#utility.yul\":8033:8105   */\n      tag_72\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":7780:8112   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122050babd129eca1d68dbc24e8ac576a5c2f4374b291cc405ab071cd6f766cb8b7b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108f98061005c5f395ff3fe608060405260043610610049575f3560e01c80633e11741f1461004d5780636f9fb98a146100755780637362377b1461009f5780638da5cb5b146100b5578063e671499b146100df575b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e9190610564565b6100fb565b005b348015610080575f80fd5b5061008961027c565b60405161009691906105c3565b60405180910390f35b3480156100aa575f80fd5b506100b3610283565b005b3480156100c0575f80fd5b506100c9610375565b6040516100d691906105eb565b60405180910390f35b6100f960048036038101906100f49190610564565b610398565b005b5f81836101089190610631565b90508047101561014d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610144906106f2565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161018a93929190610710565b6020604051808303815f875af11580156101a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ca919061077a565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561020e573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3aa3f154f6bf5e3490d1a7205aa8d1412e76d26f9d186830de86fb9309224040858560405161026e9291906107a5565b60405180910390a350505050565b5f47905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610816565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610372573d5f803e3d5ffd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f81836103a59190610631565b9050803410156103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e19061087e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161042592919061089c565b6020604051808303815f875af1158015610441573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610465919061077a565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad1885856040516104c59291906107a5565b60405180910390a350505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610500826104d7565b9050919050565b610510816104f6565b811461051a575f80fd5b50565b5f8135905061052b81610507565b92915050565b5f819050919050565b61054381610531565b811461054d575f80fd5b50565b5f8135905061055e8161053a565b92915050565b5f805f6060848603121561057b5761057a6104d3565b5b5f6105888682870161051d565b935050602061059986828701610550565b92505060406105aa86828701610550565b9150509250925092565b6105bd81610531565b82525050565b5f6020820190506105d65f8301846105b4565b92915050565b6105e5816104f6565b82525050565b5f6020820190506105fe5f8301846105dc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61063b82610531565b915061064683610531565b925082820261065481610531565b9150828204841483151761066b5761066a610604565b5b5092915050565b5f82825260208201905092915050565b7f436f6e747261637420646f6573206e6f74206861766520656e6f7567682045745f8201527f6865720000000000000000000000000000000000000000000000000000000000602082015250565b5f6106dc602383610672565b91506106e782610682565b604082019050919050565b5f6020820190508181035f830152610709816106d0565b9050919050565b5f6060820190506107235f8301866105dc565b61073060208301856105dc565b61073d60408301846105b4565b949350505050565b5f8115159050919050565b61075981610745565b8114610763575f80fd5b50565b5f8151905061077481610750565b92915050565b5f6020828403121561078f5761078e6104d3565b5b5f61079c84828501610766565b91505092915050565b5f6040820190506107b85f8301856105b4565b6107c560208301846105b4565b9392505050565b7f4f6e6c7920746865206f776e65722063616e20776974686472617700000000005f82015250565b5f610800601b83610672565b915061080b826107cc565b602082019050919050565b5f6020820190508181035f83015261082d816107f4565b9050919050565b7f4e6f7420656e6f7567682045746865722073656e7400000000000000000000005f82015250565b5f610868601583610672565b915061087382610834565b602082019050919050565b5f6020820190508181035f8301526108958161085c565b9050919050565b5f6040820190506108af5f8301856105dc565b6108bc60208301846105b4565b939250505056fea264697066735822122050babd129eca1d68dbc24e8ac576a5c2f4374b291cc405ab071cd6f766cb8b7b64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8F9 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E11741F EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x7362377B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xE671499B EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x283 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144 SWAP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x20E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3AA3F154F6BF5E3490D1A7205AA8D1412E76D26F9D186830DE86FB9309224040 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x26E SWAP3 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP3 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x623B3804FA71D67900D064613DA8F94B9617215EE90799290593E1745087AD18 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP3 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x500 DUP3 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x510 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x51A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x52B DUP2 PUSH2 0x507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x543 DUP2 PUSH2 0x531 JUMP JUMPDEST DUP2 EQ PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x55E DUP2 PUSH2 0x53A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x4D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x588 DUP7 DUP3 DUP8 ADD PUSH2 0x51D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x599 DUP7 DUP3 DUP8 ADD PUSH2 0x550 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5AA DUP7 DUP3 DUP8 ADD PUSH2 0x550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E5 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5FE PUSH0 DUP4 ADD DUP5 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x63B DUP3 PUSH2 0x531 JUMP JUMPDEST SWAP2 POP PUSH2 0x646 DUP4 PUSH2 0x531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x654 DUP2 PUSH2 0x531 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x604 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768204574 PUSH0 DUP3 ADD MSTORE PUSH32 0x6865720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6DC PUSH1 0x23 DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E7 DUP3 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x709 DUP2 PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x723 PUSH0 DUP4 ADD DUP7 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x730 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x73D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x759 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP2 EQ PUSH2 0x763 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x774 DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78F JUMPI PUSH2 0x78E PUSH2 0x4D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79C DUP5 DUP3 DUP6 ADD PUSH2 0x766 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7B8 PUSH0 DUP4 ADD DUP6 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x7C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2077697468647261770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x800 PUSH1 0x1B DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP PUSH2 0x80B DUP3 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x82D DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682045746865722073656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x868 PUSH1 0x15 DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP PUSH2 0x873 DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x895 DUP2 PUSH2 0x85C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8AF PUSH0 DUP4 ADD DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x8BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xBA 0xBD SLT SWAP15 0xCA SAR PUSH9 0xDBC24E8AC576A5C2F4 CALLDATACOPY 0x4B 0x29 SHR 0xC4 SDIV 0xAB SMOD SHR 0xD6 0xF7 PUSH7 0xCB8B7B64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "191:2152:1:-:0;;;564:49;;;;;;;;;;596:10;588:5;;:18;;;;;;;;;;;;;;;;;;191:2152;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@buyToken_153": {
									"entryPoint": 920,
									"id": 153,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getContractBalance_249": {
									"entryPoint": 636,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_82": {
									"entryPoint": 885,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellToken_211": {
									"entryPoint": 251,
									"id": 211,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawEther_236": {
									"entryPoint": 643,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8115:2",
										"nodeType": "YulBlock",
										"src": "0:8115:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "886:32:2",
													"nodeType": "YulBlock",
													"src": "886:32:2",
													"statements": [
														{
															"nativeSrc": "896:16:2",
															"nodeType": "YulAssignment",
															"src": "896:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:2",
																"nodeType": "YulIdentifier",
																"src": "907:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:2",
														"nodeType": "YulTypedName",
														"src": "868:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:2",
														"nodeType": "YulTypedName",
														"src": "878:7:2",
														"type": ""
													}
												],
												"src": "841:77:2"
											},
											{
												"body": {
													"nativeSrc": "967:79:2",
													"nodeType": "YulBlock",
													"src": "967:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:2",
																"nodeType": "YulBlock",
																"src": "1024:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:2"
																			},
																			"nativeSrc": "1026:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:2"
																		},
																		"nativeSrc": "1026:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:2"
																				},
																				"nativeSrc": "997:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:2"
																		},
																		"nativeSrc": "987:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:2"
																},
																"nativeSrc": "980:43:2",
																"nodeType": "YulFunctionCall",
																"src": "980:43:2"
															},
															"nativeSrc": "977:63:2",
															"nodeType": "YulIf",
															"src": "977:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:2",
														"nodeType": "YulTypedName",
														"src": "960:5:2",
														"type": ""
													}
												],
												"src": "924:122:2"
											},
											{
												"body": {
													"nativeSrc": "1104:87:2",
													"nodeType": "YulBlock",
													"src": "1104:87:2",
													"statements": [
														{
															"nativeSrc": "1114:29:2",
															"nodeType": "YulAssignment",
															"src": "1114:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:2"
																},
																"nativeSrc": "1123:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:2"
																},
																"nativeSrc": "1152:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:2"
															},
															"nativeSrc": "1152:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:2",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:2",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:2",
														"nodeType": "YulTypedName",
														"src": "1098:5:2",
														"type": ""
													}
												],
												"src": "1052:139:2"
											},
											{
												"body": {
													"nativeSrc": "1297:519:2",
													"nodeType": "YulBlock",
													"src": "1297:519:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:83:2",
																"nodeType": "YulBlock",
																"src": "1343:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1345:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:2"
																			},
																			"nativeSrc": "1345:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:2"
																		},
																		"nativeSrc": "1345:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1318:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1327:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1314:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:2"
																		},
																		"nativeSrc": "1314:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1339:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1310:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:2"
																},
																"nativeSrc": "1310:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1310:32:2"
															},
															"nativeSrc": "1307:119:2",
															"nodeType": "YulIf",
															"src": "1307:119:2"
														},
														{
															"nativeSrc": "1436:117:2",
															"nodeType": "YulBlock",
															"src": "1436:117:2",
															"statements": [
																{
																	"nativeSrc": "1451:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1465:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1455:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1480:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1480:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:2"
																				},
																				"nativeSrc": "1511:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1490:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:2"
																		},
																		"nativeSrc": "1490:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1480:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:118:2",
															"nodeType": "YulBlock",
															"src": "1563:118:2",
															"statements": [
																{
																	"nativeSrc": "1578:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1608:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:2"
																				},
																				"nativeSrc": "1639:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1618:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:2"
																		},
																		"nativeSrc": "1618:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1608:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:118:2",
															"nodeType": "YulBlock",
															"src": "1691:118:2",
															"statements": [
																{
																	"nativeSrc": "1706:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1736:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1736:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1771:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1782:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1767:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:2"
																				},
																				"nativeSrc": "1767:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1746:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:2"
																		},
																		"nativeSrc": "1746:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1736:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "1197:619:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1251:9:2",
														"nodeType": "YulTypedName",
														"src": "1251:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1262:7:2",
														"nodeType": "YulTypedName",
														"src": "1262:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1274:6:2",
														"nodeType": "YulTypedName",
														"src": "1274:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1282:6:2",
														"nodeType": "YulTypedName",
														"src": "1282:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1290:6:2",
														"nodeType": "YulTypedName",
														"src": "1290:6:2",
														"type": ""
													}
												],
												"src": "1197:619:2"
											},
											{
												"body": {
													"nativeSrc": "1887:53:2",
													"nodeType": "YulBlock",
													"src": "1887:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1904:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1904:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1927:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1927:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1909:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1909:17:2"
																		},
																		"nativeSrc": "1909:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1909:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1897:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1897:6:2"
																},
																"nativeSrc": "1897:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1897:37:2"
															},
															"nativeSrc": "1897:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1897:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1822:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1875:5:2",
														"nodeType": "YulTypedName",
														"src": "1875:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1882:3:2",
														"nodeType": "YulTypedName",
														"src": "1882:3:2",
														"type": ""
													}
												],
												"src": "1822:118:2"
											},
											{
												"body": {
													"nativeSrc": "2044:124:2",
													"nodeType": "YulBlock",
													"src": "2044:124:2",
													"statements": [
														{
															"nativeSrc": "2054:26:2",
															"nodeType": "YulAssignment",
															"src": "2054:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2066:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2066:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2077:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2077:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2062:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:2"
																},
																"nativeSrc": "2062:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2062:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2054:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2054:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2134:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2147:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2158:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2158:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2143:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:2"
																		},
																		"nativeSrc": "2143:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2090:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2090:43:2"
																},
																"nativeSrc": "2090:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2090:71:2"
															},
															"nativeSrc": "2090:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2090:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1946:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2016:9:2",
														"nodeType": "YulTypedName",
														"src": "2016:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2028:6:2",
														"nodeType": "YulTypedName",
														"src": "2028:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2039:4:2",
														"nodeType": "YulTypedName",
														"src": "2039:4:2",
														"type": ""
													}
												],
												"src": "1946:222:2"
											},
											{
												"body": {
													"nativeSrc": "2239:53:2",
													"nodeType": "YulBlock",
													"src": "2239:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2256:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2279:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2279:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2261:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2261:17:2"
																		},
																		"nativeSrc": "2261:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2249:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:2"
																},
																"nativeSrc": "2249:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2249:37:2"
															},
															"nativeSrc": "2249:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2249:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2174:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2227:5:2",
														"nodeType": "YulTypedName",
														"src": "2227:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2234:3:2",
														"nodeType": "YulTypedName",
														"src": "2234:3:2",
														"type": ""
													}
												],
												"src": "2174:118:2"
											},
											{
												"body": {
													"nativeSrc": "2396:124:2",
													"nodeType": "YulBlock",
													"src": "2396:124:2",
													"statements": [
														{
															"nativeSrc": "2406:26:2",
															"nodeType": "YulAssignment",
															"src": "2406:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2418:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2418:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2429:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2429:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2414:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2414:3:2"
																},
																"nativeSrc": "2414:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2414:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2406:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2406:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2486:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2486:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2499:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2499:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2510:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2510:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2495:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2495:3:2"
																		},
																		"nativeSrc": "2495:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2442:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2442:43:2"
																},
																"nativeSrc": "2442:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2442:71:2"
															},
															"nativeSrc": "2442:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2442:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2298:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2368:9:2",
														"nodeType": "YulTypedName",
														"src": "2368:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2380:6:2",
														"nodeType": "YulTypedName",
														"src": "2380:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2391:4:2",
														"nodeType": "YulTypedName",
														"src": "2391:4:2",
														"type": ""
													}
												],
												"src": "2298:222:2"
											},
											{
												"body": {
													"nativeSrc": "2554:152:2",
													"nodeType": "YulBlock",
													"src": "2554:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2571:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2571:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2574:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2574:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:2"
																},
																"nativeSrc": "2564:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2564:88:2"
															},
															"nativeSrc": "2564:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2564:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2668:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2668:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2671:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2671:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2661:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2661:6:2"
																},
																"nativeSrc": "2661:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2661:15:2"
															},
															"nativeSrc": "2661:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2661:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2692:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2692:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2695:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2695:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2685:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:2"
																},
																"nativeSrc": "2685:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2685:15:2"
															},
															"nativeSrc": "2685:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2685:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2526:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2526:180:2"
											},
											{
												"body": {
													"nativeSrc": "2760:362:2",
													"nodeType": "YulBlock",
													"src": "2760:362:2",
													"statements": [
														{
															"nativeSrc": "2770:25:2",
															"nodeType": "YulAssignment",
															"src": "2770:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2793:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2793:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2775:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2775:17:2"
																},
																"nativeSrc": "2775:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2775:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2770:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2770:1:2"
																}
															]
														},
														{
															"nativeSrc": "2804:25:2",
															"nodeType": "YulAssignment",
															"src": "2804:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2827:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2827:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2809:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2809:17:2"
																},
																"nativeSrc": "2809:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2809:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2804:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2804:1:2"
																}
															]
														},
														{
															"nativeSrc": "2838:28:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2838:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2861:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2861:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2864:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2864:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2857:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:2"
																},
																"nativeSrc": "2857:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2857:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2842:11:2",
																	"nodeType": "YulTypedName",
																	"src": "2842:11:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2875:41:2",
															"nodeType": "YulAssignment",
															"src": "2875:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2904:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "2904:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2886:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2886:17:2"
																},
																"nativeSrc": "2886:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2886:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2875:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2875:7:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3093:22:2",
																"nodeType": "YulBlock",
																"src": "3093:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3095:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3095:16:2"
																			},
																			"nativeSrc": "3095:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3095:18:2"
																		},
																		"nativeSrc": "3095:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3095:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3026:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3026:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3019:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "3019:6:2"
																				},
																				"nativeSrc": "3019:9:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3019:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3049:1:2",
																						"nodeType": "YulIdentifier",
																						"src": "3049:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3056:7:2",
																								"nodeType": "YulIdentifier",
																								"src": "3056:7:2"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3065:1:2",
																								"nodeType": "YulIdentifier",
																								"src": "3065:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3052:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "3052:3:2"
																						},
																						"nativeSrc": "3052:15:2",
																						"nodeType": "YulFunctionCall",
																						"src": "3052:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3046:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "3046:2:2"
																				},
																				"nativeSrc": "3046:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3046:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2999:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:2"
																		},
																		"nativeSrc": "2999:83:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2979:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:2"
																},
																"nativeSrc": "2979:113:2",
																"nodeType": "YulFunctionCall",
																"src": "2979:113:2"
															},
															"nativeSrc": "2976:139:2",
															"nodeType": "YulIf",
															"src": "2976:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2712:410:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2743:1:2",
														"nodeType": "YulTypedName",
														"src": "2743:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2746:1:2",
														"nodeType": "YulTypedName",
														"src": "2746:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2752:7:2",
														"nodeType": "YulTypedName",
														"src": "2752:7:2",
														"type": ""
													}
												],
												"src": "2712:410:2"
											},
											{
												"body": {
													"nativeSrc": "3224:73:2",
													"nodeType": "YulBlock",
													"src": "3224:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3241:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3241:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3246:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3246:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3234:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:2"
																},
																"nativeSrc": "3234:19:2",
																"nodeType": "YulFunctionCall",
																"src": "3234:19:2"
															},
															"nativeSrc": "3234:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "3234:19:2"
														},
														{
															"nativeSrc": "3262:29:2",
															"nodeType": "YulAssignment",
															"src": "3262:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3281:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3281:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3286:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3286:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3277:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3277:3:2"
																},
																"nativeSrc": "3277:14:2",
																"nodeType": "YulFunctionCall",
																"src": "3277:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3262:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "3262:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3128:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3196:3:2",
														"nodeType": "YulTypedName",
														"src": "3196:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3201:6:2",
														"nodeType": "YulTypedName",
														"src": "3201:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3212:11:2",
														"nodeType": "YulTypedName",
														"src": "3212:11:2",
														"type": ""
													}
												],
												"src": "3128:169:2"
											},
											{
												"body": {
													"nativeSrc": "3409:116:2",
													"nodeType": "YulBlock",
													"src": "3409:116:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3431:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3431:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3439:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3439:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3427:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3427:3:2"
																		},
																		"nativeSrc": "3427:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3427:14:2"
																	},
																	{
																		"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f756768204574",
																		"kind": "string",
																		"nativeSrc": "3443:34:2",
																		"nodeType": "YulLiteral",
																		"src": "3443:34:2",
																		"type": "",
																		"value": "Contract does not have enough Et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3420:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3420:6:2"
																},
																"nativeSrc": "3420:58:2",
																"nodeType": "YulFunctionCall",
																"src": "3420:58:2"
															},
															"nativeSrc": "3420:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "3420:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3499:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3507:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3507:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:2"
																		},
																		"nativeSrc": "3495:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:15:2"
																	},
																	{
																		"hexValue": "686572",
																		"kind": "string",
																		"nativeSrc": "3512:5:2",
																		"nodeType": "YulLiteral",
																		"src": "3512:5:2",
																		"type": "",
																		"value": "her"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:2"
																},
																"nativeSrc": "3488:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3488:30:2"
															},
															"nativeSrc": "3488:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3488:30:2"
														}
													]
												},
												"name": "store_literal_in_memory_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0",
												"nativeSrc": "3303:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3401:6:2",
														"nodeType": "YulTypedName",
														"src": "3401:6:2",
														"type": ""
													}
												],
												"src": "3303:222:2"
											},
											{
												"body": {
													"nativeSrc": "3677:220:2",
													"nodeType": "YulBlock",
													"src": "3677:220:2",
													"statements": [
														{
															"nativeSrc": "3687:74:2",
															"nodeType": "YulAssignment",
															"src": "3687:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3753:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3753:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3758:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3758:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3694:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "3694:58:2"
																},
																"nativeSrc": "3694:67:2",
																"nodeType": "YulFunctionCall",
																"src": "3694:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3687:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3859:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3859:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0",
																	"nativeSrc": "3770:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "3770:88:2"
																},
																"nativeSrc": "3770:93:2",
																"nodeType": "YulFunctionCall",
																"src": "3770:93:2"
															},
															"nativeSrc": "3770:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "3770:93:2"
														},
														{
															"nativeSrc": "3872:19:2",
															"nodeType": "YulAssignment",
															"src": "3872:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3883:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3883:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3888:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3888:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3879:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:2"
																},
																"nativeSrc": "3879:12:2",
																"nodeType": "YulFunctionCall",
																"src": "3879:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3872:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3872:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3531:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3665:3:2",
														"nodeType": "YulTypedName",
														"src": "3665:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3673:3:2",
														"nodeType": "YulTypedName",
														"src": "3673:3:2",
														"type": ""
													}
												],
												"src": "3531:366:2"
											},
											{
												"body": {
													"nativeSrc": "4074:248:2",
													"nodeType": "YulBlock",
													"src": "4074:248:2",
													"statements": [
														{
															"nativeSrc": "4084:26:2",
															"nodeType": "YulAssignment",
															"src": "4084:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4096:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4096:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4107:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4107:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4092:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4092:3:2"
																},
																"nativeSrc": "4092:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4092:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4084:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4084:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4131:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4131:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4142:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4142:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4127:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:2"
																		},
																		"nativeSrc": "4127:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4150:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4146:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:2"
																		},
																		"nativeSrc": "4146:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4120:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:2"
																},
																"nativeSrc": "4120:47:2",
																"nodeType": "YulFunctionCall",
																"src": "4120:47:2"
															},
															"nativeSrc": "4120:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "4120:47:2"
														},
														{
															"nativeSrc": "4176:139:2",
															"nodeType": "YulAssignment",
															"src": "4176:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4310:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "4310:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4184:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "4184:124:2"
																},
																"nativeSrc": "4184:131:2",
																"nodeType": "YulFunctionCall",
																"src": "4184:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4176:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4176:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3903:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4054:9:2",
														"nodeType": "YulTypedName",
														"src": "4054:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4069:4:2",
														"nodeType": "YulTypedName",
														"src": "4069:4:2",
														"type": ""
													}
												],
												"src": "3903:419:2"
											},
											{
												"body": {
													"nativeSrc": "4482:288:2",
													"nodeType": "YulBlock",
													"src": "4482:288:2",
													"statements": [
														{
															"nativeSrc": "4492:26:2",
															"nodeType": "YulAssignment",
															"src": "4492:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4504:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4504:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4515:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4500:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:2"
																},
																"nativeSrc": "4500:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4500:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4492:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4492:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4572:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4572:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4585:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4585:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4596:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4596:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4581:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4581:3:2"
																		},
																		"nativeSrc": "4581:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4581:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4528:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4528:43:2"
																},
																"nativeSrc": "4528:71:2",
																"nodeType": "YulFunctionCall",
																"src": "4528:71:2"
															},
															"nativeSrc": "4528:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "4528:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4653:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4653:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4666:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4666:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4677:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4677:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4662:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4662:3:2"
																		},
																		"nativeSrc": "4662:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4662:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4609:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4609:43:2"
																},
																"nativeSrc": "4609:72:2",
																"nodeType": "YulFunctionCall",
																"src": "4609:72:2"
															},
															"nativeSrc": "4609:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "4609:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4735:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4735:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4748:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4748:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4759:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4759:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4744:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4744:3:2"
																		},
																		"nativeSrc": "4744:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4744:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4691:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4691:43:2"
																},
																"nativeSrc": "4691:72:2",
																"nodeType": "YulFunctionCall",
																"src": "4691:72:2"
															},
															"nativeSrc": "4691:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "4691:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4328:442:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4438:9:2",
														"nodeType": "YulTypedName",
														"src": "4438:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4450:6:2",
														"nodeType": "YulTypedName",
														"src": "4450:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4458:6:2",
														"nodeType": "YulTypedName",
														"src": "4458:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4466:6:2",
														"nodeType": "YulTypedName",
														"src": "4466:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4477:4:2",
														"nodeType": "YulTypedName",
														"src": "4477:4:2",
														"type": ""
													}
												],
												"src": "4328:442:2"
											},
											{
												"body": {
													"nativeSrc": "4818:48:2",
													"nodeType": "YulBlock",
													"src": "4818:48:2",
													"statements": [
														{
															"nativeSrc": "4828:32:2",
															"nodeType": "YulAssignment",
															"src": "4828:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4853:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "4853:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4846:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "4846:6:2"
																		},
																		"nativeSrc": "4846:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4846:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4839:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4839:6:2"
																},
																"nativeSrc": "4839:21:2",
																"nodeType": "YulFunctionCall",
																"src": "4839:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4828:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "4828:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4776:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4800:5:2",
														"nodeType": "YulTypedName",
														"src": "4800:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4810:7:2",
														"nodeType": "YulTypedName",
														"src": "4810:7:2",
														"type": ""
													}
												],
												"src": "4776:90:2"
											},
											{
												"body": {
													"nativeSrc": "4912:76:2",
													"nodeType": "YulBlock",
													"src": "4912:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "4966:16:2",
																"nodeType": "YulBlock",
																"src": "4966:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4975:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4975:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4978:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4978:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4968:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4968:6:2"
																			},
																			"nativeSrc": "4968:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4968:12:2"
																		},
																		"nativeSrc": "4968:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4968:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4935:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "4935:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4957:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "4957:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4942:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "4942:14:2"
																				},
																				"nativeSrc": "4942:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4942:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4932:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "4932:2:2"
																		},
																		"nativeSrc": "4932:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4932:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4925:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:2"
																},
																"nativeSrc": "4925:40:2",
																"nodeType": "YulFunctionCall",
																"src": "4925:40:2"
															},
															"nativeSrc": "4922:60:2",
															"nodeType": "YulIf",
															"src": "4922:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4872:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:2",
														"nodeType": "YulTypedName",
														"src": "4905:5:2",
														"type": ""
													}
												],
												"src": "4872:116:2"
											},
											{
												"body": {
													"nativeSrc": "5054:77:2",
													"nodeType": "YulBlock",
													"src": "5054:77:2",
													"statements": [
														{
															"nativeSrc": "5064:22:2",
															"nodeType": "YulAssignment",
															"src": "5064:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5079:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "5079:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5073:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "5073:5:2"
																},
																"nativeSrc": "5073:13:2",
																"nodeType": "YulFunctionCall",
																"src": "5073:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5064:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "5064:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5119:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "5119:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5095:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "5095:23:2"
																},
																"nativeSrc": "5095:30:2",
																"nodeType": "YulFunctionCall",
																"src": "5095:30:2"
															},
															"nativeSrc": "5095:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "5095:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4994:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5032:6:2",
														"nodeType": "YulTypedName",
														"src": "5032:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5040:3:2",
														"nodeType": "YulTypedName",
														"src": "5040:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5048:5:2",
														"nodeType": "YulTypedName",
														"src": "5048:5:2",
														"type": ""
													}
												],
												"src": "4994:137:2"
											},
											{
												"body": {
													"nativeSrc": "5211:271:2",
													"nodeType": "YulBlock",
													"src": "5211:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "5257:83:2",
																"nodeType": "YulBlock",
																"src": "5257:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5259:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "5259:77:2"
																			},
																			"nativeSrc": "5259:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "5259:79:2"
																		},
																		"nativeSrc": "5259:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "5259:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5232:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "5232:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5241:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5241:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5228:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5228:3:2"
																		},
																		"nativeSrc": "5228:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5228:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5253:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5253:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5224:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5224:3:2"
																},
																"nativeSrc": "5224:32:2",
																"nodeType": "YulFunctionCall",
																"src": "5224:32:2"
															},
															"nativeSrc": "5221:119:2",
															"nodeType": "YulIf",
															"src": "5221:119:2"
														},
														{
															"nativeSrc": "5350:125:2",
															"nodeType": "YulBlock",
															"src": "5350:125:2",
															"statements": [
																{
																	"nativeSrc": "5365:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5365:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5379:1:2",
																		"nodeType": "YulLiteral",
																		"src": "5379:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5369:6:2",
																			"nodeType": "YulTypedName",
																			"src": "5369:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5394:71:2",
																	"nodeType": "YulAssignment",
																	"src": "5394:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5437:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "5437:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5448:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "5448:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5433:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "5433:3:2"
																				},
																				"nativeSrc": "5433:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "5433:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5457:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "5457:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5404:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "5404:28:2"
																		},
																		"nativeSrc": "5404:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5404:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5394:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "5394:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5137:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5181:9:2",
														"nodeType": "YulTypedName",
														"src": "5181:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5192:7:2",
														"nodeType": "YulTypedName",
														"src": "5192:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5204:6:2",
														"nodeType": "YulTypedName",
														"src": "5204:6:2",
														"type": ""
													}
												],
												"src": "5137:345:2"
											},
											{
												"body": {
													"nativeSrc": "5614:206:2",
													"nodeType": "YulBlock",
													"src": "5614:206:2",
													"statements": [
														{
															"nativeSrc": "5624:26:2",
															"nodeType": "YulAssignment",
															"src": "5624:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5636:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "5636:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5647:2:2",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5632:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:2"
																},
																"nativeSrc": "5632:18:2",
																"nodeType": "YulFunctionCall",
																"src": "5632:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5624:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "5624:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5704:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5717:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5717:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5728:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5728:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5713:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5713:3:2"
																		},
																		"nativeSrc": "5713:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5713:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5660:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "5660:43:2"
																},
																"nativeSrc": "5660:71:2",
																"nodeType": "YulFunctionCall",
																"src": "5660:71:2"
															},
															"nativeSrc": "5660:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "5660:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5785:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "5785:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5798:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "5798:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5809:2:2",
																				"nodeType": "YulLiteral",
																				"src": "5809:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5794:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5794:3:2"
																		},
																		"nativeSrc": "5794:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5794:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5741:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "5741:43:2"
																},
																"nativeSrc": "5741:72:2",
																"nodeType": "YulFunctionCall",
																"src": "5741:72:2"
															},
															"nativeSrc": "5741:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "5741:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5488:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5578:9:2",
														"nodeType": "YulTypedName",
														"src": "5578:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5590:6:2",
														"nodeType": "YulTypedName",
														"src": "5590:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5598:6:2",
														"nodeType": "YulTypedName",
														"src": "5598:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5609:4:2",
														"nodeType": "YulTypedName",
														"src": "5609:4:2",
														"type": ""
													}
												],
												"src": "5488:332:2"
											},
											{
												"body": {
													"nativeSrc": "5932:71:2",
													"nodeType": "YulBlock",
													"src": "5932:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5954:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "5954:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5962:1:2",
																				"nodeType": "YulLiteral",
																				"src": "5962:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5950:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:2"
																		},
																		"nativeSrc": "5950:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "5950:14:2"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e207769746864726177",
																		"kind": "string",
																		"nativeSrc": "5966:29:2",
																		"nodeType": "YulLiteral",
																		"src": "5966:29:2",
																		"type": "",
																		"value": "Only the owner can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5943:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "5943:6:2"
																},
																"nativeSrc": "5943:53:2",
																"nodeType": "YulFunctionCall",
																"src": "5943:53:2"
															},
															"nativeSrc": "5943:53:2",
															"nodeType": "YulExpressionStatement",
															"src": "5943:53:2"
														}
													]
												},
												"name": "store_literal_in_memory_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a",
												"nativeSrc": "5826:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5924:6:2",
														"nodeType": "YulTypedName",
														"src": "5924:6:2",
														"type": ""
													}
												],
												"src": "5826:177:2"
											},
											{
												"body": {
													"nativeSrc": "6155:220:2",
													"nodeType": "YulBlock",
													"src": "6155:220:2",
													"statements": [
														{
															"nativeSrc": "6165:74:2",
															"nodeType": "YulAssignment",
															"src": "6165:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6231:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6231:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6236:2:2",
																		"nodeType": "YulLiteral",
																		"src": "6236:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6172:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "6172:58:2"
																},
																"nativeSrc": "6172:67:2",
																"nodeType": "YulFunctionCall",
																"src": "6172:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6165:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6165:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6337:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6337:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a",
																	"nativeSrc": "6248:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "6248:88:2"
																},
																"nativeSrc": "6248:93:2",
																"nodeType": "YulFunctionCall",
																"src": "6248:93:2"
															},
															"nativeSrc": "6248:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "6248:93:2"
														},
														{
															"nativeSrc": "6350:19:2",
															"nodeType": "YulAssignment",
															"src": "6350:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6361:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "6361:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6366:2:2",
																		"nodeType": "YulLiteral",
																		"src": "6366:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6357:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6357:3:2"
																},
																"nativeSrc": "6357:12:2",
																"nodeType": "YulFunctionCall",
																"src": "6357:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6350:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6350:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6009:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6143:3:2",
														"nodeType": "YulTypedName",
														"src": "6143:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6151:3:2",
														"nodeType": "YulTypedName",
														"src": "6151:3:2",
														"type": ""
													}
												],
												"src": "6009:366:2"
											},
											{
												"body": {
													"nativeSrc": "6552:248:2",
													"nodeType": "YulBlock",
													"src": "6552:248:2",
													"statements": [
														{
															"nativeSrc": "6562:26:2",
															"nodeType": "YulAssignment",
															"src": "6562:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6574:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "6574:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:2",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6570:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:2"
																},
																"nativeSrc": "6570:18:2",
																"nodeType": "YulFunctionCall",
																"src": "6570:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6562:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6562:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6609:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "6609:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6620:1:2",
																				"nodeType": "YulLiteral",
																				"src": "6620:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6605:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6605:3:2"
																		},
																		"nativeSrc": "6605:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6605:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6628:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "6628:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6634:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "6634:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6624:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6624:3:2"
																		},
																		"nativeSrc": "6624:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6624:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6598:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:2"
																},
																"nativeSrc": "6598:47:2",
																"nodeType": "YulFunctionCall",
																"src": "6598:47:2"
															},
															"nativeSrc": "6598:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "6598:47:2"
														},
														{
															"nativeSrc": "6654:139:2",
															"nodeType": "YulAssignment",
															"src": "6654:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6788:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "6788:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6662:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "6662:124:2"
																},
																"nativeSrc": "6662:131:2",
																"nodeType": "YulFunctionCall",
																"src": "6662:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6654:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "6654:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6381:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6532:9:2",
														"nodeType": "YulTypedName",
														"src": "6532:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6547:4:2",
														"nodeType": "YulTypedName",
														"src": "6547:4:2",
														"type": ""
													}
												],
												"src": "6381:419:2"
											},
											{
												"body": {
													"nativeSrc": "6912:65:2",
													"nodeType": "YulBlock",
													"src": "6912:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6934:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "6934:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6942:1:2",
																				"nodeType": "YulLiteral",
																				"src": "6942:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6930:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:2"
																		},
																		"nativeSrc": "6930:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:14:2"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682045746865722073656e74",
																		"kind": "string",
																		"nativeSrc": "6946:23:2",
																		"nodeType": "YulLiteral",
																		"src": "6946:23:2",
																		"type": "",
																		"value": "Not enough Ether sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6923:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:2"
																},
																"nativeSrc": "6923:47:2",
																"nodeType": "YulFunctionCall",
																"src": "6923:47:2"
															},
															"nativeSrc": "6923:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "6923:47:2"
														}
													]
												},
												"name": "store_literal_in_memory_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b",
												"nativeSrc": "6806:171:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6904:6:2",
														"nodeType": "YulTypedName",
														"src": "6904:6:2",
														"type": ""
													}
												],
												"src": "6806:171:2"
											},
											{
												"body": {
													"nativeSrc": "7129:220:2",
													"nodeType": "YulBlock",
													"src": "7129:220:2",
													"statements": [
														{
															"nativeSrc": "7139:74:2",
															"nodeType": "YulAssignment",
															"src": "7139:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7205:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "7205:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7210:2:2",
																		"nodeType": "YulLiteral",
																		"src": "7210:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7146:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "7146:58:2"
																},
																"nativeSrc": "7146:67:2",
																"nodeType": "YulFunctionCall",
																"src": "7146:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7139:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7311:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "7311:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b",
																	"nativeSrc": "7222:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "7222:88:2"
																},
																"nativeSrc": "7222:93:2",
																"nodeType": "YulFunctionCall",
																"src": "7222:93:2"
															},
															"nativeSrc": "7222:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "7222:93:2"
														},
														{
															"nativeSrc": "7324:19:2",
															"nodeType": "YulAssignment",
															"src": "7324:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7335:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "7335:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7340:2:2",
																		"nodeType": "YulLiteral",
																		"src": "7340:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7331:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:2"
																},
																"nativeSrc": "7331:12:2",
																"nodeType": "YulFunctionCall",
																"src": "7331:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7324:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7324:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6983:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7117:3:2",
														"nodeType": "YulTypedName",
														"src": "7117:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7125:3:2",
														"nodeType": "YulTypedName",
														"src": "7125:3:2",
														"type": ""
													}
												],
												"src": "6983:366:2"
											},
											{
												"body": {
													"nativeSrc": "7526:248:2",
													"nodeType": "YulBlock",
													"src": "7526:248:2",
													"statements": [
														{
															"nativeSrc": "7536:26:2",
															"nodeType": "YulAssignment",
															"src": "7536:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7548:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "7548:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7559:2:2",
																		"nodeType": "YulLiteral",
																		"src": "7559:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7544:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7544:3:2"
																},
																"nativeSrc": "7544:18:2",
																"nodeType": "YulFunctionCall",
																"src": "7544:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7536:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7583:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "7583:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7594:1:2",
																				"nodeType": "YulLiteral",
																				"src": "7594:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7579:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "7579:3:2"
																		},
																		"nativeSrc": "7579:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "7579:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7602:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "7602:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7608:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "7608:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7598:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:2"
																		},
																		"nativeSrc": "7598:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "7598:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7572:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "7572:6:2"
																},
																"nativeSrc": "7572:47:2",
																"nodeType": "YulFunctionCall",
																"src": "7572:47:2"
															},
															"nativeSrc": "7572:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "7572:47:2"
														},
														{
															"nativeSrc": "7628:139:2",
															"nodeType": "YulAssignment",
															"src": "7628:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7762:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "7762:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7636:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "7636:124:2"
																},
																"nativeSrc": "7636:131:2",
																"nodeType": "YulFunctionCall",
																"src": "7636:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7628:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "7628:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7355:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7506:9:2",
														"nodeType": "YulTypedName",
														"src": "7506:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7521:4:2",
														"nodeType": "YulTypedName",
														"src": "7521:4:2",
														"type": ""
													}
												],
												"src": "7355:419:2"
											},
											{
												"body": {
													"nativeSrc": "7906:206:2",
													"nodeType": "YulBlock",
													"src": "7906:206:2",
													"statements": [
														{
															"nativeSrc": "7916:26:2",
															"nodeType": "YulAssignment",
															"src": "7916:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7928:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "7928:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7939:2:2",
																		"nodeType": "YulLiteral",
																		"src": "7939:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7924:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "7924:3:2"
																},
																"nativeSrc": "7924:18:2",
																"nodeType": "YulFunctionCall",
																"src": "7924:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7916:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "7916:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7996:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "7996:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8009:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "8009:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8020:1:2",
																				"nodeType": "YulLiteral",
																				"src": "8020:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8005:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:2"
																		},
																		"nativeSrc": "8005:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7952:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "7952:43:2"
																},
																"nativeSrc": "7952:71:2",
																"nodeType": "YulFunctionCall",
																"src": "7952:71:2"
															},
															"nativeSrc": "7952:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "7952:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8077:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "8077:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8090:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "8090:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8101:2:2",
																				"nodeType": "YulLiteral",
																				"src": "8101:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8086:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "8086:3:2"
																		},
																		"nativeSrc": "8086:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "8086:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8033:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "8033:43:2"
																},
																"nativeSrc": "8033:72:2",
																"nodeType": "YulFunctionCall",
																"src": "8033:72:2"
															},
															"nativeSrc": "8033:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "8033:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7780:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7870:9:2",
														"nodeType": "YulTypedName",
														"src": "7870:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7882:6:2",
														"nodeType": "YulTypedName",
														"src": "7882:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7890:6:2",
														"nodeType": "YulTypedName",
														"src": "7890:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7901:4:2",
														"nodeType": "YulTypedName",
														"src": "7901:4:2",
														"type": ""
													}
												],
												"src": "7780:332:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract does not have enough Et\")\n\n        mstore(add(memPtr, 32), \"her\")\n\n    }\n\n    function abi_encode_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough Ether sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610049575f3560e01c80633e11741f1461004d5780636f9fb98a146100755780637362377b1461009f5780638da5cb5b146100b5578063e671499b146100df575b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e9190610564565b6100fb565b005b348015610080575f80fd5b5061008961027c565b60405161009691906105c3565b60405180910390f35b3480156100aa575f80fd5b506100b3610283565b005b3480156100c0575f80fd5b506100c9610375565b6040516100d691906105eb565b60405180910390f35b6100f960048036038101906100f49190610564565b610398565b005b5f81836101089190610631565b90508047101561014d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610144906106f2565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161018a93929190610710565b6020604051808303815f875af11580156101a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ca919061077a565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561020e573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3aa3f154f6bf5e3490d1a7205aa8d1412e76d26f9d186830de86fb9309224040858560405161026e9291906107a5565b60405180910390a350505050565b5f47905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610816565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610372573d5f803e3d5ffd5b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f81836103a59190610631565b9050803410156103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e19061087e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161042592919061089c565b6020604051808303815f875af1158015610441573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610465919061077a565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad1885856040516104c59291906107a5565b60405180910390a350505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610500826104d7565b9050919050565b610510816104f6565b811461051a575f80fd5b50565b5f8135905061052b81610507565b92915050565b5f819050919050565b61054381610531565b811461054d575f80fd5b50565b5f8135905061055e8161053a565b92915050565b5f805f6060848603121561057b5761057a6104d3565b5b5f6105888682870161051d565b935050602061059986828701610550565b92505060406105aa86828701610550565b9150509250925092565b6105bd81610531565b82525050565b5f6020820190506105d65f8301846105b4565b92915050565b6105e5816104f6565b82525050565b5f6020820190506105fe5f8301846105dc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61063b82610531565b915061064683610531565b925082820261065481610531565b9150828204841483151761066b5761066a610604565b5b5092915050565b5f82825260208201905092915050565b7f436f6e747261637420646f6573206e6f74206861766520656e6f7567682045745f8201527f6865720000000000000000000000000000000000000000000000000000000000602082015250565b5f6106dc602383610672565b91506106e782610682565b604082019050919050565b5f6020820190508181035f830152610709816106d0565b9050919050565b5f6060820190506107235f8301866105dc565b61073060208301856105dc565b61073d60408301846105b4565b949350505050565b5f8115159050919050565b61075981610745565b8114610763575f80fd5b50565b5f8151905061077481610750565b92915050565b5f6020828403121561078f5761078e6104d3565b5b5f61079c84828501610766565b91505092915050565b5f6040820190506107b85f8301856105b4565b6107c560208301846105b4565b9392505050565b7f4f6e6c7920746865206f776e65722063616e20776974686472617700000000005f82015250565b5f610800601b83610672565b915061080b826107cc565b602082019050919050565b5f6020820190508181035f83015261082d816107f4565b9050919050565b7f4e6f7420656e6f7567682045746865722073656e7400000000000000000000005f82015250565b5f610868601583610672565b915061087382610834565b602082019050919050565b5f6020820190508181035f8301526108958161085c565b9050919050565b5f6040820190506108af5f8301856105dc565b6108bc60208301846105b4565b939250505056fea264697066735822122050babd129eca1d68dbc24e8ac576a5c2f4374b291cc405ab071cd6f766cb8b7b64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x49 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E11741F EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x7362377B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xE671499B EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x283 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x14D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144 SWAP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x710 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x20E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3AA3F154F6BF5E3490D1A7205AA8D1412E76D26F9D186830DE86FB9309224040 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x26E SWAP3 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E1 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP3 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x623B3804FA71D67900D064613DA8F94B9617215EE90799290593E1745087AD18 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP3 SWAP2 SWAP1 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x500 DUP3 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x510 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x51A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x52B DUP2 PUSH2 0x507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x543 DUP2 PUSH2 0x531 JUMP JUMPDEST DUP2 EQ PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x55E DUP2 PUSH2 0x53A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x4D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x588 DUP7 DUP3 DUP8 ADD PUSH2 0x51D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x599 DUP7 DUP3 DUP8 ADD PUSH2 0x550 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5AA DUP7 DUP3 DUP8 ADD PUSH2 0x550 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x5BD DUP2 PUSH2 0x531 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E5 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5FE PUSH0 DUP4 ADD DUP5 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x63B DUP3 PUSH2 0x531 JUMP JUMPDEST SWAP2 POP PUSH2 0x646 DUP4 PUSH2 0x531 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x654 DUP2 PUSH2 0x531 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x66B JUMPI PUSH2 0x66A PUSH2 0x604 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768204574 PUSH0 DUP3 ADD MSTORE PUSH32 0x6865720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6DC PUSH1 0x23 DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E7 DUP3 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x709 DUP2 PUSH2 0x6D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x723 PUSH0 DUP4 ADD DUP7 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x730 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x73D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x759 DUP2 PUSH2 0x745 JUMP JUMPDEST DUP2 EQ PUSH2 0x763 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x774 DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78F JUMPI PUSH2 0x78E PUSH2 0x4D3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79C DUP5 DUP3 DUP6 ADD PUSH2 0x766 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7B8 PUSH0 DUP4 ADD DUP6 PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x7C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2077697468647261770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x800 PUSH1 0x1B DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP PUSH2 0x80B DUP3 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x82D DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682045746865722073656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x868 PUSH1 0x15 DUP4 PUSH2 0x672 JUMP JUMPDEST SWAP2 POP PUSH2 0x873 DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x895 DUP2 PUSH2 0x85C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8AF PUSH0 DUP4 ADD DUP6 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x8BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xBA 0xBD SLT SWAP15 0xCA SAR PUSH9 0xDBC24E8AC576A5C2F4 CALLDATACOPY 0x4B 0x29 SHR 0xC4 SDIV 0xAB SMOD SHR 0xD6 0xF7 PUSH7 0xCB8B7B64736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "191:2152:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:438;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1993:166;;;;;;;;;;;;;:::i;:::-;;243:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;862:353;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1467:438;1561:19;1597:10;1583:11;:24;;;;:::i;:::-;1561:46;;1650:11;1625:21;:36;;1617:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1719:5;1712:26;;;1739:10;1759:4;1766:11;1712:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1796:10;1788:28;;:41;1817:11;1788:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:5;1845:53;;1855:10;1845:53;;;1874:11;1887:10;1845:53;;;;;;;:::i;:::-;;;;;;;;1551:354;1467:438;;;:::o;2236:105::-;2287:7;2313:21;2306:28;;2236:105;:::o;1993:166::-;2059:5;;;;;;;;;;2045:19;;:10;:19;;;2037:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2114:5;;;;;;;;;;2106:23;;:46;2130:21;2106:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:166::o;243:20::-;;;;;;;;;;;;:::o;862:353::-;963:19;999:10;985:11;:24;;;;:::i;:::-;963:46;;1040:11;1027:9;:24;;1019:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1095:5;1088:22;;;1111:10;1123:11;1088:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1177:5;1151:57;;1165:10;1151:57;;;1184:11;1197:10;1151:57;;;;;;;:::i;:::-;;;;;;;;953:262;862:353;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:118::-;1909:24;1927:5;1909:24;:::i;:::-;1904:3;1897:37;1822:118;;:::o;1946:222::-;2039:4;2077:2;2066:9;2062:18;2054:26;;2090:71;2158:1;2147:9;2143:17;2134:6;2090:71;:::i;:::-;1946:222;;;;:::o;2174:118::-;2261:24;2279:5;2261:24;:::i;:::-;2256:3;2249:37;2174:118;;:::o;2298:222::-;2391:4;2429:2;2418:9;2414:18;2406:26;;2442:71;2510:1;2499:9;2495:17;2486:6;2442:71;:::i;:::-;2298:222;;;;:::o;2526:180::-;2574:77;2571:1;2564:88;2671:4;2668:1;2661:15;2695:4;2692:1;2685:15;2712:410;2752:7;2775:20;2793:1;2775:20;:::i;:::-;2770:25;;2809:20;2827:1;2809:20;:::i;:::-;2804:25;;2864:1;2861;2857:9;2886:30;2904:11;2886:30;:::i;:::-;2875:41;;3065:1;3056:7;3052:15;3049:1;3046:22;3026:1;3019:9;2999:83;2976:139;;3095:18;;:::i;:::-;2976:139;2760:362;2712:410;;;;:::o;3128:169::-;3212:11;3246:6;3241:3;3234:19;3286:4;3281:3;3277:14;3262:29;;3128:169;;;;:::o;3303:222::-;3443:34;3439:1;3431:6;3427:14;3420:58;3512:5;3507:2;3499:6;3495:15;3488:30;3303:222;:::o;3531:366::-;3673:3;3694:67;3758:2;3753:3;3694:67;:::i;:::-;3687:74;;3770:93;3859:3;3770:93;:::i;:::-;3888:2;3883:3;3879:12;3872:19;;3531:366;;;:::o;3903:419::-;4069:4;4107:2;4096:9;4092:18;4084:26;;4156:9;4150:4;4146:20;4142:1;4131:9;4127:17;4120:47;4184:131;4310:4;4184:131;:::i;:::-;4176:139;;3903:419;;;:::o;4328:442::-;4477:4;4515:2;4504:9;4500:18;4492:26;;4528:71;4596:1;4585:9;4581:17;4572:6;4528:71;:::i;:::-;4609:72;4677:2;4666:9;4662:18;4653:6;4609:72;:::i;:::-;4691;4759:2;4748:9;4744:18;4735:6;4691:72;:::i;:::-;4328:442;;;;;;:::o;4776:90::-;4810:7;4853:5;4846:13;4839:21;4828:32;;4776:90;;;:::o;4872:116::-;4942:21;4957:5;4942:21;:::i;:::-;4935:5;4932:32;4922:60;;4978:1;4975;4968:12;4922:60;4872:116;:::o;4994:137::-;5048:5;5079:6;5073:13;5064:22;;5095:30;5119:5;5095:30;:::i;:::-;4994:137;;;;:::o;5137:345::-;5204:6;5253:2;5241:9;5232:7;5228:23;5224:32;5221:119;;;5259:79;;:::i;:::-;5221:119;5379:1;5404:61;5457:7;5448:6;5437:9;5433:22;5404:61;:::i;:::-;5394:71;;5350:125;5137:345;;;;:::o;5488:332::-;5609:4;5647:2;5636:9;5632:18;5624:26;;5660:71;5728:1;5717:9;5713:17;5704:6;5660:71;:::i;:::-;5741:72;5809:2;5798:9;5794:18;5785:6;5741:72;:::i;:::-;5488:332;;;;;:::o;5826:177::-;5966:29;5962:1;5954:6;5950:14;5943:53;5826:177;:::o;6009:366::-;6151:3;6172:67;6236:2;6231:3;6172:67;:::i;:::-;6165:74;;6248:93;6337:3;6248:93;:::i;:::-;6366:2;6361:3;6357:12;6350:19;;6009:366;;;:::o;6381:419::-;6547:4;6585:2;6574:9;6570:18;6562:26;;6634:9;6628:4;6624:20;6620:1;6609:9;6605:17;6598:47;6662:131;6788:4;6662:131;:::i;:::-;6654:139;;6381:419;;;:::o;6806:171::-;6946:23;6942:1;6934:6;6930:14;6923:47;6806:171;:::o;6983:366::-;7125:3;7146:67;7210:2;7205:3;7146:67;:::i;:::-;7139:74;;7222:93;7311:3;7222:93;:::i;:::-;7340:2;7335:3;7331:12;7324:19;;6983:366;;;:::o;7355:419::-;7521:4;7559:2;7548:9;7544:18;7536:26;;7608:9;7602:4;7598:20;7594:1;7583:9;7579:17;7572:47;7636:131;7762:4;7636:131;:::i;:::-;7628:139;;7355:419;;;:::o;7780:332::-;7901:4;7939:2;7928:9;7924:18;7916:26;;7952:71;8020:1;8009:9;8005:17;7996:6;7952:71;:::i;:::-;8033:72;8101:2;8090:9;8086:18;8077:6;8033:72;:::i;:::-;7780:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "459400",
								"executionCost": "24756",
								"totalCost": "484156"
							},
							"external": {
								"buyToken(address,uint256,uint256)": "infinite",
								"getContractBalance()": "334",
								"owner()": "2549",
								"sellToken(address,uint256,uint256)": "infinite",
								"withdrawEther()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 2343,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 613,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 564,
									"end": 613,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 596,
									"end": 606,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 588,
									"end": 593,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 593,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 2343,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050babd129eca1d68dbc24e8ac576a5c2f4374b291cc405ab071cd6f766cb8b7b64736f6c63430008160033",
									".code": [
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "3E11741F"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "6F9FB98A"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "7362377B"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "E671499B"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 191,
											"end": 2343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1467,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1467,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2236,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2236,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1993,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 862,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 862,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1583,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1646,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1661,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1617,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1617,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1763,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1777,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1712,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1712,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 1816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1872,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "3AA3F154F6BF5E3490D1A7205AA8D1412E76D26F9D186830DE86FB9309224040"
										},
										{
											"begin": 1874,
											"end": 1885,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1897,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1845,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1898,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1993,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2064,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2037,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2037,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2106,
											"end": 2129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2130,
											"end": 2151,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 243,
											"end": 263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 243,
											"end": 263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 985,
											"end": 996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 985,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 963,
											"end": 1009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1036,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1019,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1019,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1088,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1088,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1175,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "623B3804FA71D67900D064613DA8F94B9617215EE90799290593E1745087AD18"
										},
										{
											"begin": 1184,
											"end": 1195,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1151,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1208,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 953,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1909,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1909,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1907,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2158,
											"end": 2159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2090,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2090,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2292,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2174,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2520,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2298,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2442,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2442,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2520,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2526,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2668,
											"end": 2669,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2699,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2700,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 3122,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2712,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2775,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2775,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2795,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2809,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2829,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2866,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2904,
											"end": 2915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2886,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2916,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2886,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3046,
											"end": 3068,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3082,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2976,
											"end": 3115,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3095,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 3115,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2976,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 3122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 3122,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 3122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 3122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 3122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 3122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3297,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3128,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3244,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3284,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3297,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3525,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3303,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3477,
											"name": "PUSH",
											"source": 2,
											"value": "436F6E747261637420646F6573206E6F74206861766520656E6F756768204574"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3478,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "6865720000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3303,
											"end": 3525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3694,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3694,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3761,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3859,
											"end": 3862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3770,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3770,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3531,
											"end": 3897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4127,
											"end": 4144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4310,
											"end": 4314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4184,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4184,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4176,
											"end": 4315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4176,
											"end": 4315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 4322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4517,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4492,
											"end": 4518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4492,
											"end": 4518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4578,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4528,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4599,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4528,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4609,
											"end": 4681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4609,
											"end": 4681,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4609,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4691,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4691,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4691,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4691,
											"end": 4763,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4691,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4866,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4776,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4859,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 4860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4988,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4872,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4957,
											"end": 4962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4942,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 4963,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4942,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4922,
											"end": 4982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4982,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4922,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5131,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4994,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5048,
											"end": 5053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5095,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5119,
											"end": 5124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5095,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5095,
											"end": 5125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5095,
											"end": 5125,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5095,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5482,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5137,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5232,
											"end": 5239,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5256,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5221,
											"end": 5340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5221,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5221,
											"end": 5340,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5259,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5259,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5338,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5259,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5221,
											"end": 5340,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5221,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5379,
											"end": 5380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5457,
											"end": 5464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5433,
											"end": 5455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5465,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5404,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5350,
											"end": 5475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5482,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5632,
											"end": 5650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5624,
											"end": 5650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5624,
											"end": 5650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5713,
											"end": 5730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5660,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5660,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5809,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5807,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5741,
											"end": 5813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5813,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5741,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5488,
											"end": 5820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5826,
											"end": 6003,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5826,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5966,
											"end": 5995,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C7920746865206F776E65722063616E2077697468647261770000000000"
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5826,
											"end": 6003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5826,
											"end": 6003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6375,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6009,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6236,
											"end": 6238,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6172,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 6172,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6172,
											"end": 6239,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6172,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6248,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6248,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6248,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6248,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6248,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6364,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6350,
											"end": 6369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6350,
											"end": 6369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6800,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6381,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6618,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6598,
											"end": 6645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6662,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6788,
											"end": 6792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6662,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6662,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6662,
											"end": 6793,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6662,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6806,
											"end": 6977,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6806,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6946,
											"end": 6969,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420656E6F7567682045746865722073656E740000000000000000000000"
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6923,
											"end": 6970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6806,
											"end": 6977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6806,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7349,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6983,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7210,
											"end": 7212,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7205,
											"end": 7208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7146,
											"end": 7213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7213,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7146,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7311,
											"end": 7314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7222,
											"end": 7315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7315,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7222,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7342,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7331,
											"end": 7343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6983,
											"end": 7349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7774,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 7355,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7521,
											"end": 7525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7536,
											"end": 7562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7536,
											"end": 7562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7608,
											"end": 7617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7598,
											"end": 7618,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 7595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7592,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7579,
											"end": 7596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7762,
											"end": 7766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7636,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7767,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7636,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7901,
											"end": 7905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 7937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8018,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8005,
											"end": 8022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7996,
											"end": 8002,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7952,
											"end": 8023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7952,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8077,
											"end": 8083,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8033,
											"end": 8105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8033,
											"end": 8105,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8033,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7780,
											"end": 8112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"crypto exchange/crypto exchange smart contract 2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyToken(address,uint256,uint256)": "e671499b",
							"getContractBalance()": "6f9fb98a",
							"owner()": "8da5cb5b",
							"sellToken(address,uint256,uint256)": "3e11741f",
							"withdrawEther()": "7362377b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenSale\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"}],\"name\":\"sellToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyToken(address,uint256,uint256)\":{\"details\":\"Allows users to buy tokens for Ether at a specified price.\",\"params\":{\"token\":\"Address of the IERC-20 token to buy\",\"tokenAmount\":\"Amount of tokens to buy\",\"tokenPrice\":\"Price per token in Ether\"}},\"getContractBalance()\":{\"details\":\"Returns the Ether balance of the contract.\"},\"sellToken(address,uint256,uint256)\":{\"details\":\"Allows users to sell tokens for Ether at a specified price.\",\"params\":{\"token\":\"Address of the IERC-20 token to sell\",\"tokenAmount\":\"Amount of tokens to sell\",\"tokenPrice\":\"Price per token in Ether\"}},\"withdrawEther()\":{\"details\":\"Allows the owner to withdraw Ether from the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crypto exchange/crypto exchange smart contract 2.sol\":\"TokenExchange\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"crypto exchange/crypto exchange smart contract 2.sol\":{\"keccak256\":\"0x5b38d8746f0bb327028b96aab65c281d7c806623cc32d34ec25d6c6ed923dfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d2198bdf1046e467c59a3fb706f4b6698c7134e9eaadab8948c74ce13674d2a\",\"dweb:/ipfs/QmUm2XuxprhMGnvXt5A5hGDDMyi2d5iUS8s4MQ9PNxS8GT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "crypto exchange/crypto exchange smart contract 2.sol:TokenExchange",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"crypto exchange/crypto exchange smart contract 2.sol": {
				"ast": {
					"absolutePath": "crypto exchange/crypto exchange smart contract 2.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TokenExchange": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 78,
							"src": "57:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenExchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "TokenExchange",
							"nameLocation": "200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 82,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "258:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "243:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18",
									"id": 92,
									"name": "TokenPurchase",
									"nameLocation": "315:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "345:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "329:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "368:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "352:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "383:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "375:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:77:1"
									},
									"src": "309:97:1"
								},
								{
									"anonymous": false,
									"eventSelector": "3aa3f154f6bf5e3490d1a7205aa8d1412e76d26f9d186830de86fb9309224040",
									"id": 102,
									"name": "TokenSale",
									"nameLocation": "417:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "443:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "427:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "467:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "451:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "482:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "474:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:78:1"
									},
									"src": "411:94:1"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "578:35:1",
										"statements": [
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "588:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 106,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "596:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "600:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "596:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "588:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "588:18:1"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:2:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:0:1"
									},
									"scope": 250,
									"src": "564:49:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "953:262:1",
										"statements": [
											{
												"assignments": [
													122
												],
												"declarations": [
													{
														"constant": false,
														"id": 122,
														"mutability": "mutable",
														"name": "etherAmount",
														"nameLocation": "971:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "963:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "963:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "985:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 124,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "999:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "985:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "963:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 128,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1027:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1031:5:1",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1027:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "etherAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1040:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1027:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682045746865722073656e74",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1053:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b",
																"typeString": "literal_string \"Not enough Ether sent\""
															},
															"value": "Not enough Ether sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c6427ba804cdc03d4ea49311785a6c33377d5d12d933da48fa5349576bce28b",
																"typeString": "literal_string \"Not enough Ether sent\""
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1019:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1019:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1111:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1115:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1111:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1123:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 136,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "1095:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 135,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1088:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1088:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1102:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1088:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1088:47:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1165:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1169:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1165:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1184:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 149,
															"name": "tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1197:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 144,
														"name": "TokenPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "1151:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "EmitStatement",
												"src": "1146:62:1"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "619:238:1",
										"text": " @dev Allows users to buy tokens for Ether at a specified price.\n @param token Address of the IERC-20 token to buy\n @param tokenAmount Amount of tokens to buy\n @param tokenPrice Price per token in Ether"
									},
									"functionSelector": "e671499b",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "871:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "888:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "880:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "903:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "895:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "tokenPrice",
												"nameLocation": "924:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "916:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:56:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:0:1"
									},
									"scope": 250,
									"src": "862:353:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1551:354:1",
										"statements": [
											{
												"assignments": [
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "etherAmount",
														"nameLocation": "1569:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "1561:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1561:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1583:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 166,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "1597:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1583:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1561:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 172,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1633:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenExchange_$250",
																				"typeString": "contract TokenExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenExchange_$250",
																				"typeString": "contract TokenExchange"
																			}
																		],
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1625:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 170,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1625:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1625:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1639:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1625:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 175,
																"name": "etherAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1650:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1625:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f756768204574686572",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1663:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0",
																"typeString": "literal_string \"Contract does not have enough Ether\""
															},
															"value": "Contract does not have enough Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82250866fa540ce339dd1a9cd2a034018ad21d8fb7718d4cce290647146d64c0",
																"typeString": "literal_string \"Contract does not have enough Ether\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1617:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:84:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1617:84:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1739:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1743:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1739:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1759:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenExchange_$250",
																		"typeString": "contract TokenExchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenExchange_$250",
																		"typeString": "contract TokenExchange"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1766:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 181,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1719:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 180,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1712:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1712:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1712:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "1712:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "1817:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 195,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1796:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1800:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1796:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1788:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1788:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1788:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1808:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1788:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1788:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1788:41:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1855:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1859:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1855:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1867:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1874:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 207,
															"name": "tokenPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "1887:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 202,
														"name": "TokenSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1845:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "EmitStatement",
												"src": "1840:58:1"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1221:241:1",
										"text": " @dev Allows users to sell tokens for Ether at a specified price.\n @param token Address of the IERC-20 token to sell\n @param tokenAmount Amount of tokens to sell\n @param tokenPrice Price per token in Ether"
									},
									"functionSelector": "3e11741f",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellToken",
									"nameLocation": "1476:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1494:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1486:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1509:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1501:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "tokenPrice",
												"nameLocation": "1530:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1522:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:56:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1551:0:1"
									},
									"scope": 250,
									"src": "1467:438:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2027:132:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 216,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2045:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2049:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2045:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 218,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "2059:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2045:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e207769746864726177",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2066:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a",
																"typeString": "literal_string \"Only the owner can withdraw\""
															},
															"value": "Only the owner can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc3ce8804b0d349f620fe0f7bee046f011fb5990796ad57048df3d348201789a",
																"typeString": "literal_string \"Only the owner can withdraw\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2037:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2037:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2037:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 230,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TokenExchange_$250",
																			"typeString": "contract TokenExchange"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TokenExchange_$250",
																			"typeString": "contract TokenExchange"
																		}
																	],
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2130:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 228,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2130:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2130:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2144:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2130:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 225,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "2114:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2106:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2106:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2106:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2121:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2106:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2106:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2106:46:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1911:77:1",
										"text": " @dev Allows the owner to withdraw Ether from the contract."
									},
									"functionSelector": "7362377b",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawEther",
									"nameLocation": "2002:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2015:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:0:1"
									},
									"scope": 250,
									"src": "1993:166:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2296:45:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 244,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2321:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TokenExchange_$250",
																	"typeString": "contract TokenExchange"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TokenExchange_$250",
																	"typeString": "contract TokenExchange"
																}
															],
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2313:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2327:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2313:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 247,
												"nodeType": "Return",
												"src": "2306:28:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2165:66:1",
										"text": " @dev Returns the Ether balance of the contract."
									},
									"functionSelector": "6f9fb98a",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "2245:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2263:2:1"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2287:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:9:1"
									},
									"scope": 250,
									"src": "2236:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 251,
							"src": "191:2152:1",
							"usedErrors": [],
							"usedEvents": [
								92,
								102
							]
						}
					],
					"src": "32:2312:1"
				},
				"id": 1
			}
		}
	}
}